defaults:
  - _self_
  - rewards:
    - action_penalty
    - action_penalty4x
    - action_pose_err
    - drop_penalty
    - hand_dist
    - hand_joint_pos_err
    - hand_rot_reward
    - object_dof_pos_err
    - object_pos_err
    - reach_bonus
    - rot_reward_delta
    - rot_reward
    - task_reward
    - thumb_dist
    - index_dist
    - middle_dist
    - ring_dist

# used to create the object
name: ${if:${task.env.enableCameraSensors},ArticulateTaskCamera,ArticulateTask}

physics_engine: ${..physics_engine}
env:
  numEnvs: ${resolve_default:16384,${...num_envs}}
  numActions: 22
  envSpacing: 0.75
  episodeLength: 600
  enableDebugVis: False
  aggregateMode: 1

  clipObservations: 5.0
  clipActions: 1.0

  stiffnessScale: 1.0
  forceLimitScale: 1.0

  useRelativeControl: False
  dofSpeedScale: 20.0
  actionsMovingAverage: 1.0
  controlFrequencyInv: 2 # 30 Hz

  startPositionNoise: 0.01
  startRotationNoise: 0.0

  resetPositionNoise: 0.01
  resetRotationNoise: 0.0
  resetDofPosRandomInterval: 0.2
  resetDofVelRandomInterval: 0.0

  # Random forces applied to the object
  forceScale: 0.0
  forceProbRange: [0.001, 0.1]
  forceDecay: 0.99
  forceDecayInterval: 0.08
  useOneHot: true  
  objectDofName: "joint_0"
  maxConsecutiveSuccesses: 100

  varDims:
    hand_joint_pos: [22]
    hand_joint_vel: [22]
    object_pos: [3]
    object_quat: [4]
    goal_pos: [3]
    goal_quat: [4]
    object_lin_vel: [3]
    object_ang_vel: [3]
    object_dof_pos: [2]
    goal_dof_pos: [2]
    hand_palm_pos: [3]
    hand_palm_quat: [4]
    hand_palm_vel: [3]
    object_type: [1]   # Is 1 if useOneHot=False
    object_instance: [1]  # TODO: make variable with default in config.yaml
    object_type_one_hot: [7]   # Is 1 if useOneHot=False
    object_instance_one_hot: [5]  # TODO: make variable with default in config.yaml
    actions: [22]
    hand_camera: [64, 64, 3]
  
  # create a dict config for obsDims  based on variables in obsKeys
  obsDims: ${dict:${.varDims},${.obsKeys}}
  # ${eval:"{k: ${varDims}[k] for k in ${obsKeys}}"}

  cameraSpec:
    wrist_camera:
      width: 64
      heigth: 64
      is_body_camera: true
      actor_name: hand
      attach_link_name: palm_link
      camera_pose: [[0.05,0,0.05], [0.71,0.05,0.05,0.71]]
    fixed_camera:
      width: 64
      heigth: 64
      is_body_camera: false
      actor_name: hand
      camera_pose: [[0.0, -0.35, 0.2], [0.0, 0.0, 0.85090352, 0.52532199]]

  asset:
    assetFileName: "urdf/kuka_allegro_description/allegro_grasp_fixed.urdf"
    assetFileNameBottle: "urdf/objects/bottle/mobility.urdf"
    assetFileNamePillBottle: "urdf/objects/pill_bottle/mobility.urdf"
    assetFileNameSprayBottle: 
      - "urdf/objects/spray_bottle/mobility.urdf"
      - "urdf/objects/spray_bottle2/mobility.urdf"
      - "urdf/objects/spray_bottle3/mobility.urdf"
      - "urdf/objects/spray_bottle4/mobility.urdf"
      - "urdf/objects/spray_bottle5/mobility.urdf"
    assetFileNameDispenser: "urdf/objects/dispenser/mobility.urdf"
    assetFileNameScissors: 
      - "urdf/objects/scissors/mobility.urdf"
      - "urdf/objects/scissors2/mobility.urdf"
      - "urdf/objects/scissors3/mobility.urdf"
      - "urdf/objects/scissors4/mobility.urdf"


task:
  randomize: False
  randomization_params:
    frequency: 720   # Define how many simulation steps between generating new randomizations
    observations:
      range: [0, .002] # range for the white noise
      range_correlated: [0, .001 ] # range for correlated noise, refreshed with freq `frequency`
      operation: "additive"
      distribution: "gaussian"
      # schedule: "linear"   # "constant" is to turn on noise after `schedule_steps` num steps
      # schedule_steps: 40000
    actions:
      range: [0., .05]
      range_correlated: [0, .015] # range for correlated noise, refreshed with freq `frequency`
      operation: "additive"
      distribution: "gaussian"
      # schedule: "linear"  # "linear" will linearly interpolate between no rand and max rand
      # schedule_steps: 40000
    sim_params:
      gravity:
        range: [0, 0.4]
        operation: "additive"
        distribution: "gaussian"
        # schedule: "linear"  # "linear" will linearly interpolate between no rand and max rand
        # schedule_steps: 40000
    actor_params:
      hand:
        color: True
        dof_properties:
          damping:
            range: [0.3, 3.0]
            operation: "scaling"
            distribution: "loguniform"
            # schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            # schedule_steps: 30000
          stiffness:
            range: [0.75, 1.5]
            operation: "scaling"
            distribution: "loguniform"
            # schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            # schedule_steps: 30000
          lower:
            range: [0, 0.01]
            operation: "additive"
            distribution: "gaussian"
            # schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            # schedule_steps: 30000
          upper:
            range: [0, 0.01]
            operation: "additive"
            distribution: "gaussian"
            # schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            # schedule_steps: 30000
        rigid_body_properties:
          mass:
            range: [0.5, 1.5]
            operation: "scaling"
            distribution: "uniform"
            setup_only: True # Property will only be randomized once before simulation is started. See Domain Randomization Documentation for more info.
            # schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            # schedule_steps: 30000
        rigid_shape_properties:
          friction:
            num_buckets: 250
            range: [0.7, 1.3]
            operation: "scaling"
            distribution: "uniform"
            # schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            # schedule_steps: 30000
      object:
        scale:
          range: [0.95, 1.05]
          operation: "scaling"
          distribution: "uniform"
          setup_only: True # Property will only be randomized once before simulation is started. See Domain Randomization Documentation for more info.
          # schedule: "linear"  # "linear" will scale the current random sample by ``min(current num steps, schedule_steps) / schedule_steps`
          # schedule_steps: 30000
        rigid_body_properties:
          mass:
            range: [0.5, 1.5]
            operation: "scaling"
            distribution: "uniform"
            setup_only: True # Property will only be randomized once before simulation is started. See Domain Randomization Documentation for more info.
            # schedule: "linear"  # "linear" will scale the current random sample by ``min(current num steps, schedule_steps) / schedule_steps`
            # schedule_steps: 30000
        rigid_shape_properties:
          friction:
            num_buckets: 250
            range: [0.7, 1.3]
            operation: "scaling"
            distribution: "uniform"
            # schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            # schedule_steps: 30000

sim:
  dt: 0.01667 # 1/60
  substeps: 2
  up_axis: "z"
  use_gpu_pipeline: ${eq:${...pipeline},"gpu"}
  gravity: [0.0, 0.0, -9.81]
  physx:
    num_threads: ${....num_threads}
    solver_type: ${....solver_type}
    use_gpu: ${contains:"cuda",${....sim_device}} # set to False to run on CPU
    num_position_iterations: 8
    num_velocity_iterations: 0
    max_gpu_contact_pairs: 8388608 # 8*1024*1024
    num_subscenes: ${....num_subscenes}
    contact_offset: 0.002
    rest_offset: 0.0
    bounce_threshold_velocity: 0.2
    max_depenetration_velocity: 1000.0
    default_buffer_size_multiplier: 5.0
    contact_collection: 0 # 0: CC_NEVER (don't collect contact info), 1: CC_LAST_SUBSTEP (collect only contacts on last substep), 2: CC_ALL_SUBSTEPS (default - all contacts)
