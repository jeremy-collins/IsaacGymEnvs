params:
  seed: ${...seed}

  algo:
    name: a2c_continuous

  model:
    name: continuous_a2c_logstd

  network:
    name: actor_critic_dict
    separate: False

    space:
      continuous:
        mu_activation: None
        sigma_activation: None
        mu_init:
          name: default
        sigma_init:
          name: const_initializer
          val: 0
        fixed_sigma: True

    input_preprocessors:
      hand_camera:
        cnn:
          type: conv2d
          activation: relu
          initializer:
              name: default
          regularizer:
            name: 'None'
          spatial_softmax:
            normalize: True
          convs:    
            - filters: 64
              kernel_size: 7
              strides: 2
              padding: 3
            - filters: 32
              kernel_size: 1
              strides: 1
              padding: 0
            - filters: 32
              kernel_size: 3
              strides: 1
              padding: 1
            - filters: 32
              kernel_size: 1
              strides: 1
              padding: 1
    mlp:
      units: [512, 256, 128]
      activation: elu
      d2rl: False

      initializer:
        name: default
      regularizer:
        name: None

  load_checkpoint: ${if:${...checkpoint},True,False} # flag which sets whether to load the checkpoint
  load_path: ${...checkpoint} # path to the checkpoint to load

  config:
    name: ${resolve_default:AllegroHandGrasp,${....experiment}}
    full_experiment_name: ${.name}
    env_name: rlgpu
    multi_gpu: False
    ppo: True
    mixed_precision: False
    normalize_input: True
    normalize_value: True
    value_bootstrap: True
    num_actors: ${....task.env.numEnvs}
    reward_shaper:
      scale_value: 0.01
    normalize_advantage: True
    gamma: 0.99
    tau: 0.95
    learning_rate: 5e-3
    lr_schedule: adaptive
    schedule_type: standard
    kl_threshold: 0.02
    score_to_win: 100000
    max_epochs: ${resolve_default:5000,${....max_iterations}}
    save_best_after: 500
    save_frequency: 200
    print_stats: True
    grad_norm: 1.0
    entropy_coef: 0.0
    truncate_grads: True
    e_clip: 0.2
    horizon_length: 8
    minibatch_size: ${eval:${....task.env.numEnvs}*4}
    mini_epochs: 5
    critic_coef: 4
    clip_value: True
    seq_len: 4
    bounds_loss_coef: 0.0001
    score_keys: ['goal_dist', 'hand_dist', 'task_dist', 'success', 'full_hand_dist', 'fingertip_dist']

    player:
      #render: True
      deterministic: True
      games_num: 100000
      print_stats: True
      device: ${rl_device}
